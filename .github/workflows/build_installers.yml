name: "(D) üì¶Ô∏è Build Installers"

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: write

jobs:
  build-installer:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Install dependencies
        run: |
          cd ./static/installers/stub-win64-installer
          pnpm install

      - name: Build installer
        run: |
          cd ./static/installers/stub-win64-installer && pnpm tauri build

      - name: Copy installer to target
        run: |
          mkdir -p ./output
          cp -r ./target/release/stub-installer.exe ./output/floorp-stub.installer.exe

      - name: Publish Unsigned Installer üéÅ
        id: publish-unsigned-installer
        uses: actions/upload-artifact@v4
        with:
          name: floorp-stub-installer-unsigned
          path: output/floorp-stub.installer.exe
          retention-days: 30

      - name: Sign Installer üñäÔ∏è
        id: Sign-installer
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: "${{ secrets.SIGNPATH_API_TOKEN }}"
          organization-id: "3b13ba3b-8062-4df7-a4a6-217a5ec352c4"
          project-slug: "Floorp"
          signing-policy-slug: "release-signing"
          artifact-configuration-slug: "stub-v2-signing"
          github-artifact-id: "${{ steps.publish-unsigned-installer.outputs.artifact-id }}"
          wait-for-completion-timeout-in-seconds: 7200
          wait-for-completion: true
          output-artifact-directory: output/signed_installer

      - name: Upload final installer artifacts
        uses: actions/upload-artifact@v4
        with:
          name: floorp-stub-installer
          path: ./output/signed_installer/floorp-stub.installer.exe
          retention-days: 30

      - name: Get latest release info
        id: get_latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          GITHUB_OWNER: Floorp-Projects
          GITHUB_REPO: Floorp
          FILE_NAME: floorp-stub.installer.exe
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $owner = $env:GITHUB_OWNER
          $repo = $env:GITHUB_REPO
          $token = $env:GITHUB_TOKEN
          $fileName = $env:FILE_NAME

          Write-Host "Fetching latest release for $owner/$repo"
          $release = Invoke-RestMethod -Uri "https://api.github.com/repos/$owner/$repo/releases/latest" -Headers @{ Authorization = "token $token"; Accept = 'application/vnd.github+json' }
          $tag = $release.tag_name
          Write-Host "Latest tag: $tag"

          # Find asset id for the stub installer if present
          $asset = $release.assets | Where-Object { $_.name -eq $fileName }
          if ($asset) {
            $assetId = $asset.id
            Write-Host "Found existing asset id: $assetId"
          } else {
            $assetId = ''
            Write-Host "No existing asset named $fileName"
          }

          # write outputs
          "tag=$tag" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "asset_id=$assetId" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Delete existing stub asset (if any)
        if: ${{ steps.get_latest.outputs.asset_id != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_OWNER: Floorp-Projects
          GITHUB_REPO: Floorp
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $assetId = '${{ steps.get_latest.outputs.asset_id }}'
          $owner = $env:GITHUB_OWNER
          $repo = $env:GITHUB_REPO
          $token = $env:GITHUB_TOKEN

          Write-Host "Deleting asset id $assetId"
          $url = "https://api.github.com/repos/$owner/$repo/releases/assets/$assetId"
          Invoke-RestMethod -Method Delete -Uri $url -Headers @{ Authorization = "token $token"; Accept = 'application/vnd.github+json' }
          Write-Host "Deleted asset $assetId"

      - name: Upload signed installer to latest release
        uses: softprops/action-gh-release@v2
        with:
          files: ./output/signed_installer/floorp-stub.installer.exe
          tag_name: ${{ steps.get_latest.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
